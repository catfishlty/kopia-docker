name: Build image on upstream update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    outputs:
      digestChanged: ${{ steps.getdigest.outputs.digestChanged }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest digest of kopia/kopia:latest
        id: getdigest
        run: |
          new_digest=$(docker manifest inspect kopia/kopia:latest | jq -r '.manifests[0].digest')
          echo "new_digest=${new_digest}" >> $GITHUB_OUTPUT
          if [ -f .latest.digest ]; then
            old_digest=$(cat .latest.digest)
          else
            old_digest=""
          fi
          echo "old_digest=${old_digest}"
          if [ "$new_digest" != "$old_digest" ]; then
            echo "Digest has changed."
            echo "digestChanged=true" >> $GITHUB_OUTPUT
          else
            echo "Digest unchanged."
            echo "digestChanged=false" >> $GITHUB_OUTPUT
          fi

      - name: Save new digest to file if changed
        env:
          PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
        if: steps.getdigest.outputs.new_digest != ''
        run: |
          echo "${{ steps.getdigest.outputs.new_digest }}" > .latest.digest
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .latest.digest
          git commit -m "Update upstream digest [skip ci]" || echo "No changes to commit"
          git push https://x-access-token:${PUSH_TOKEN}@github.com/catfishlty/kopia-docker.git HEAD:main

  build:
    if: ${{ needs.check-upstream.outputs.digestChanged == 'true' }}
    runs-on: ubuntu-latest
    needs: check-upstream
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t fciasth/kopia-docker:latest .

      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push fciasth/kopia-docker:latest
